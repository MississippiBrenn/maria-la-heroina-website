{"version":3,"sources":["components/layouts/Header.js","components/exercises/Dialogs/Create.js","images/indigenousMaria.jpg","components/layouts/Banner.js","csvs/uid_possible_matches_10_miles_with_race.csv","components/tables/columns.js","components/tables/globalFilter.js","components/tables/Table1.js","components/tables/Table2.js","csvs/uid_possible_matches_50_miles_with_out_race.csv","components/tables/Table4.js","csvs/uid_possible_matches_all_with_race.csv","components/tables/Table5.js","csvs/uid_possible_matches_all_with_out_race_part_1.csv","components/tables/Table6.js","csvs/uid_possible_matches_all_with_out_race_part_2.csv","components/tables/Table7.js","components/tables/TableBasic.js","csvs/uid_possible_matches_50_miles_with_race.csv","components/tables/index.js","components/matches/index.js","store.js","components/App.js","reportWebVitals.js","index.js"],"names":["React","Component","props","AppBar","position","Toolbar","Typography","variant","color","style","flex","gutterBottom","Accordion","withStyles","root","border","boxShadow","borderBottom","display","margin","expanded","MuiAccordion","AccordionSummary","backgroundColor","marginBottom","minHeight","content","expandIcon","order","MuiAccordionSummary","AccordionDetails","theme","padding","spacing","MuiAccordionDetails","CustomizedAccordions","useState","setExpanded","handleChange","panel","event","newExpanded","square","onChange","aria-controls","id","className","COLUMNS","Header","Footer","accessor","GlobalFilter","filter","setFilter","value","e","target","Table1","data","setData","useEffect","csv","datacsv","then","columns","useMemo","useTable","useGlobalFilter","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps","Table2","TableBasic","csvInput","TableWrapper","title","csv3","Table4","Table5","Table6","Table7","styles","Paper","marginTop","height","overflow","matchDatabase","category","onSelect","matchDBEntry","Grid","container","item","sm","group","textTransform","List","component","ListItem","button","onClick","type","csvLocation","range","race","handleCategorySelected","setState","handleDBEntrySelected","find","entry","Object","entries","this","reduce","matchEntry","getMatchByCategory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d413dc5.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CreateDialog from '../exercises/Dialogs/Create';\n\n\nexport default props =>\n<AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h4\" color=\"inherit\" style={{flex: 1}} gutterBottom>\n        Maria la Heroina\n      </Typography>\n      <Typography variant=\"h6\" color=\"inherit\" style={{flex: 1}} gutterBottom>\n      Maria is a tool for matching missing and unidentified women in the National Missing and Unidentified Persons System(NAMUS).\n      </Typography>\n      </Toolbar>\n      {/* <CreateDialog></CreateDialog> */}\n</AppBar>","import React from 'react';\nimport Component from 'react'\nimport Fragment from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon  from '@material-ui/icons/Add'\n\n\nexport default class extends React.Component {\n    state = {\n        open: false\n    }\n\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    render() {\n        const { open } = this.state\n        return <div>\n            <Button variant=\"fab\" onClick={this.handleToggle}>\n                <AddIcon></AddIcon>\n                 \n            </Button>\n            <Dialog \n                open={open} \n                onClose={this.handleToggle} \n                aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">\n                CREATE A NEW Exercise\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Please fill out the form below\n                </DialogContentText>\n            </DialogContent>\n            <form>\n\n            </form>\n            <DialogActions>\n                <Button color=\"primary\" variant=\"raised\">\n                    Subscribe\n                </Button>\n            </DialogActions>\n        </Dialog>\n        </div>;\n    }\n}","export default __webpack_public_path__ + \"static/media/indigenousMaria.ee66ef4f.jpg\";","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport MariaImage from '../../images/indigenousMaria.jpg'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n    },\n    expandIcon: {\n        order: -1,\n        margin: 5\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiAccordionDetails);\n\nexport default function CustomizedAccordions() {\n    const [expanded, setExpanded] = React.useState('panel1');\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <Accordion square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Working with Maria</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                        <div>\n                            {/* <img src={MariaImage} alt='indigenous maria with arms outstretched' /> */}\n                            <ul className='instructions'>\n                                <li>Thank Maria for all the work that she has done</li>\n                                <li>Experience thoughts of joy and hope for the work Maria has accomplished</li>\n                                <li>Take a few moments to silently or outloud tune in and express your how much her work has meant to you </li>\n                                <li><h4>After positively tuning our experience to the space of Maria, we are ready to continue</h4> </li>\n                                <li>When you finish your work please close any tabs you have open utilising Maria and allow her to rest</li>\n                            </ul>\n                        </div>\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\" expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Searching with Maria</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                    <li>Maria already has filtered for possible matches based on age and date missing</li>\n                        <li>Click on the title for a set of matches from the left panel</li>\n                        <li>Optional: Enter in numbers from the NAMUS case number for the woman you are looking for</li>\n                        <li>You now have a table with all potential matches from NAMUS</li>\n                        <li> For ease of use, you are supplied the url from NAMUS</li>\n                        <li>Visit the url provided(the case number is in the url) to further research the match</li>\n                        <li>It is recommended you have an account with NAMUS.org to check already submitted matches</li>\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/uid_possible_matches_10_miles_with_race.6630160b.csv\";","export const COLUMNS = [\n    {\n    Header: 'NAMUS case',\n    Footer: 'NAMUS case',  \n    accessor:'case', \n     \n}, \n{\n    Header: 'Possible Matches',\n    Footer: 'Possible Matches',\n    accessor: 'possible_matches'\n},\n]","import React from 'react';\n\nexport const GlobalFilter = ({filter, setFilter}) => {\n    return(<div>\n        <span>\n            Search table using numbers only (ie 15993){' '}\n            <input value = {filter || ''}\n            onChange={(e) => setFilter(e.target.value)} />\n        </span>\n    </div>)\n}\n\n// this will only work if data is loaded on client side, once we move off csvs will eed to chnage","import React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_10_miles_with_race.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table1() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table1; ","import React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_10_miles_with_race.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table2() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table2; ","export default __webpack_public_path__ + \"static/media/uid_possible_matches_50_miles_with_out_race.a937acf6.csv\";","import React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_50_miles_with_out_race.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table1() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table1; ","export default __webpack_public_path__ + \"static/media/uid_possible_matches_all_with_race.05c7e173.csv\";","import React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_all_with_race.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table1() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table1; ","export default __webpack_public_path__ + \"static/media/uid_possible_matches_all_with_out_race_part_1.3bde49e3.csv\";","import React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_all_with_out_race_part_1.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table1() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table1; ","export default __webpack_public_path__ + \"static/media/uid_possible_matches_all_with_out_race_part_2.b951782c.csv\";","\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport datacsv from '../../csvs/uid_possible_matches_all_with_out_race_part_2.csv';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction Table1() {\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        csv(datacsv).then(setData);\n    }, []);\n\n    // not creating new data on every render\n    const columns = useMemo(() => COLUMNS, [])\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default Table1; ","import React, { useState, useEffect } from 'react';\nimport { csv } from 'd3';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport { COLUMNS } from './columns';\nimport '../../css/basicTable.css';\n\nimport { GlobalFilter } from './globalFilter'\n\nfunction TableBasic(props) {\n  \n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        csv(props.csvInput).then(setData);     \n    }, []);\n\n    // not creating new data on every render\n    const columns =  COLUMNS\n\n\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter } = useTable({\n            columns,\n            data\n        }, useGlobalFilter)\n\n\n    const { globalFilter } = state\n\n    return (\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n\n                        {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}> {}\n                                {column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                // console.log(cell)\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <tfoot>\n                {footerGroups.map(footerGroup => (\n                    <tr {...footerGroup.getFooterGroupProps()}>\n                        {\n                            footerGroup.headers.map(column => (\n                                <td {...column.getFooterProps}>\n                                    {\n                                        column.render('Footer')\n                                    }\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ))}\n            </tfoot>\n        </table>\n        </>\n    )\n}\n\nexport default TableBasic; ","export default __webpack_public_path__ + \"static/media/uid_possible_matches_50_miles_with_race.6aa384b6.csv\";","import React from 'react';\n\nimport Table1 from './Table1';\nimport Table2 from './Table2';\nimport Table4 from './Table4';\nimport Table5 from './Table5';\nimport Table6 from './Table6';\nimport Table7 from './Table7';\n\nimport TableBasic from './TableBasic';\nimport csv3 from '../../csvs/uid_possible_matches_50_miles_with_race.csv';\n\nfunction TableWrapper(props) {\n    const title = props.title\n    return (\n        <div className=\"container\">\n            {(() => {\n\n                switch (title) {\n                    case 'Unidentified with race within 10 miles':\n                        return (\n                            <Table1 />\n                        )\n                    case 'Unidentified without race within 10 miles':\n                        return (\n                            <Table2 />\n                        )\n                    case 'Unidentified with race within 50 miles':\n                        return (\n                            <TableBasic csvInput={csv3} />\n                        )\n                    case 'Unidentified without race within 50 miles':\n                        return (\n                            <Table4 />\n                        )\n                    case 'Unidentified with race all matches':\n                        return (\n                            <Table5 />\n                            )\n                    case 'Unidentified without race all matches part 1':\n                        return (\n                            <Table6 />\n                            )\n                    case 'Unidentified without race all matches part 2':\n                        return (\n                            <Table7 />\n                            )\n                    default:\n                        return (\n                            <div></div>\n                        )\n                }\n\n            })()}\n\n        </div>\n\n    )\n}\n\nexport default TableWrapper;\n","import React, { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport TableWrapper from '../tables';\n\nconst styles = {\n    Paper: {\n        padding: 20, marginTop: 10, marginBottom: 20, height: 500, overflow: 'auto'\n    },\n}\n\nexport default ({\n    matchDatabase, \n    category, \n    onSelect,\n    matchDBEntry: {\n        id, \n        title='Welcome, Please select a set of matches from the list on the left', \n    }\n}) =>\n    <Grid container>\n        <Grid item sm>\n            <Paper style={styles.Paper}>\n                {matchDatabase.map(([group, matchDatabase]) =>\n                    !(category) || category === group\n                        ? <Fragment key={group}>\n                            <Typography variant=\"h4\" style={{ textTransform: 'capitalize' }}>\n                                {group}\n                            </Typography>\n                            <List component=\"ul\">\n                                {matchDatabase.map(({ title, id }) =>\n                                    <ListItem key ={id} button \n                                    onClick={() => onSelect(id)}\n                                    >\n                                        {title}\n                                    </ListItem>\n                                )}\n                            </List>\n                        </Fragment>\n                        : null\n                )}\n            </Paper>\n        </Grid>\n        <Grid item sm>\n            <Paper style={styles.Paper}>\n                <Fragment>\n                    <Typography variant=\"h4\">{title} </Typography> \n                    <Typography variant=\"subtitle1\" style={{ marginTop: 20 }}></Typography>\n                    <TableWrapper title={title}></TableWrapper>\n                </Fragment>\n            </ Paper>\n        </Grid>\n    </Grid>","export const matchTo = ['Unidentified', 'Missing']\n\nexport const matchDatabase = [\n  {\n    id: 1,\n    title: 'Unidentified with race within 10 miles',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_10_miles_with_race.csv',\n    range: 10,\n    race: true\n  },\n  {\n    id: 2,\n    title: 'Unidentified without race within 10 miles',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_10_miles_with_out_race.csv',\n    range: 10,\n    race: true\n\n  },\n  {\n    id: 3,\n    title: 'Unidentified with race within 50 miles',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_50_miles_with_race.csv',\n    range: 50,\n    race: true\n  },\n  {\n    id: 4,\n    title: 'Unidentified without race within 50 miles',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_50_miles_with_out_race.csv',\n    range: 50,\n    race: false\n  },\n\n  {\n    id: 5,\n    title: 'Unidentified with race all matches',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_all_with_race.csv',\n    range: 10000,\n    race: true\n  },\n  {\n    id: 6,\n    title: 'Unidentified without race all matches part 1',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_all_with_out_race_part_1',\n    range: 10000,\n    race: false\n  },\n  {\n    id: 7,\n    title: 'Unidentified without race all matches part 2',\n    type: 'Unidentified',\n    csvLocation: '../../csvs/uid_possible_matches_all_with_out_race_part_2',\n    range: 10000,\n    race: false\n  },\n]\n","import React, { Component, Fragment } from 'react';\nimport { Header, Banner, Footer } from './layouts';\nimport Matches from './matches';\n\nimport {  matchTo, matchDatabase} from \"../store.js\";\n\nexport default class extends Component {\n    state = {\n      matchDatabase,\n      matchDBEntry:{}\n    }\n\n    //accept data as props and pass them down for rendering\n    // to be able to return non object for itreating use object entries  \n  getMatchByCategory() {\n    return Object.entries(this.state.matchDatabase.reduce((matchDatabase, matchEntry) => {\n      const { type } = matchEntry\n\n        // spread out elements into a new array \n      matchDatabase[type] = matchDatabase[type] \n      ? [...matchDatabase[type], matchEntry] \n      : [matchEntry]\n\n      return matchDatabase\n    }, {})\n    )\n  }\n\n  handleCategorySelected = category  => {\n    this.setState({\n      category\n    })\n  }\n\n   //callback that retrieves previous state(exercises) as well as props\n  //asynchronous setState\n  // to avoid state being changed during call \n  handleDBEntrySelected = id  => {\n    this.setState(({ matchDatabase }) => ({\n      matchDBEntry: matchDatabase.find(entry => entry.id === id )\n    }))\n  }\n\n\n\n  render() {\n  const matchDatabase = this.getMatchByCategory(),\n  {category, matchDBEntry} = this.state \n  \n    return (\n    <>\n      <Header />\n      <Banner />\n      <Matches \n      matchDBEntry={matchDBEntry}\n      category={category}\n      matchDatabase={matchDatabase}\n      onSelect={this.handleDBEntrySelected}\n      />\n      {/* <Footer \n      matchTo={matchTo}\n      category={category}\n      onSelect={this.handleCategorySelected}/>*/}\n\n    </> \n    )  \n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}